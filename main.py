from configs import bot, token
from datetime import datetime
from convert import audio2wav
from pars import collect
from teldb import record
import requests
import telebot


def get_data(message, monetary):
    req = requests.get("https://yobit.net/api/3/ticker/" + monetary)
    response = req.json()
    sell_price = response[monetary]["sell"]
    bot.send_message(message.chat.id, f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\n–¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: {sell_price}")


def get_news(message):
    last_rbk_post = collect()
    bot.send_message(message.chat.id, f"–°—Ç–∞—Ç—å—è —Å –†–ë–ö:\n{last_rbk_post}")


def telegram_bot(token):
    @bot.message_handler(content_types=["voice"])
    def translate(message):
        word = audio2wav(message.voice.file_id, message.chat.id)
        examples_us = {"—Ü–µ–Ω–∞ –¥–æ–ª–ª–∞—Ä", "–∫—É—Ä—Å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö", "–¥–æ–ª–ª–∞—Ä"}
        examples_ru = {"—Ü–µ–Ω–∞ —Ä—É–±–ª—å", "–∫—É—Ä—Å –≤ —Ä—É–±–ª—è—Ö", "—Ä—É–±–ª—å"}
        examples_news = {"–Ω–æ–≤–æ—Å—Ç–∏", "–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏"}
        if word.lower() in examples_us:
            words = "btc_usd"
        elif word.lower() in examples_ru:
            words = "btc_rur"
        elif word.lower() in examples_news:
            get_news(message)
        else:
            bot.send_message(message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã!\n–ò–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –µ—ë —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å üòï')
        get_data(message, words)

    @bot.message_handler(commands=["start"])
    def start_message(message):
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = telebot.types.KeyboardButton("–¶–µ–Ω–∞")
        item2 = telebot.types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏")
        markup.add(item1, item2)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name} \n–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ü§ñ \n–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å üòÑ'.format(message.from_user), reply_markup=markup)
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–∏—Ç–∫–æ–∏–Ω–∞, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <–¶–µ–Ω–∞>, –∞ –∑–∞—Ç–µ–º '
                                          '–∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –≤–∞–ª—é—Ç—É\n–ò–ª–∏ –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–æ–≤–æ—Å—Ç—å —Å –†–ë–ö üòÑ')
        bot.send_message(message.chat.id, '–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –±–∏—Ç–∫–æ–∏–Ω–∞ –∏–ª–∏ '
                                          '–Ω–æ–≤–æ—Å—Ç–µ–π\n–ü—Ä–∏–º–µ—Ä:\n–ö—É—Ä—Å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö ‚Äî "—Ü–µ–Ω–∞ –¥–æ–ª–ª–∞—Ä", "–∫—É—Ä—Å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö", '
                                          '"–¥–æ–ª–ª–∞—Ä"\n–ö—É—Ä—Å –≤ —Ä—É–±–ª—è—Ö ‚Äî "—Ü–µ–Ω–∞ —Ä—É–±–ª—å", "–∫—É—Ä—Å –≤ —Ä—É–±–ª—è—Ö", "—Ä—É–±–ª—å"\n–ù–æ–≤–æ—Å—Ç–∏ '
                                          '‚Äî "–Ω–æ–≤–æ—Å—Ç–∏", "–ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏" ')
        record(message)

    @bot.message_handler(content_types=["text"])
    def send_text(message):
        try:
            if message.text.lower() == "price" or message.text == "–¶–µ–Ω–∞":
                markup2 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                item3 = telebot.types.KeyboardButton("–î–æ–ª–ª–∞—Ä")
                item4 = telebot.types.KeyboardButton("–†—É–±–ª—å")
                back = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
                markup2.add(item3, item4, back)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É:', reply_markup=markup2)
            if message.text == "–î–æ–ª–ª–∞—Ä":
                get_data(message, "btc_usd")
            if message.text == "–†—É–±–ª—å":
                get_data(message, "btc_rur")
            if message.text == "–ù–∞–∑–∞–¥":
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = telebot.types.KeyboardButton("–¶–µ–Ω–∞")
                item2 = telebot.types.KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏")
                markup.add(item1, item2)
                bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ: ', reply_markup=markup)

            if message.text.lower() == "news" or message.text == "–ù–æ–≤–æ—Å—Ç–∏":
                get_news(message)

        except Exception as ex:
            print(ex)
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞")
    bot.polling(none_stop=True, interval=0)


if __name__ == '__main__':
    telegram_bot(token)
